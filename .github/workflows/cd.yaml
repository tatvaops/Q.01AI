name: CD

on:
  push:
    branches: [main]
    tags:
      - 'v*'

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: us-central1
  GKE_CLUSTER: tatvaops-cluster
  GKE_ZONE: us-central1-a

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    strategy:
      matrix:
        service: [api, summarizer, milestoner]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build \
            -f apps/${{ matrix.service }}/Dockerfile \
            -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/tatvaops-docker/tatvaops-${{ matrix.service }}:${{ github.sha }} \
            -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/tatvaops-docker/tatvaops-${{ matrix.service }}:latest \
            .

      - name: Push Docker image
        run: |
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/tatvaops-docker/tatvaops-${{ matrix.service }}:${{ github.sha }}
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/tatvaops-docker/tatvaops-${{ matrix.service }}:latest

  deploy:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    needs: build-and-push
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} \
            --zone ${{ env.GKE_ZONE }} \
            --project ${{ env.GCP_PROJECT_ID }}

      - name: Update image tags in deployments
        run: |
          sed -i "s|gcr.io/PROJECT_ID|${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/tatvaops-docker|g" infra/k8s/*.yaml
          sed -i "s|:latest|:${{ github.sha }}|g" infra/k8s/*-deployment.yaml

      - name: Deploy to GKE
        run: |
          kubectl apply -f infra/k8s/namespace.yaml
          kubectl apply -f infra/k8s/configmap.yaml
          kubectl apply -f infra/k8s/rbac.yaml
          kubectl apply -f infra/k8s/api-deployment.yaml
          kubectl apply -f infra/k8s/summarizer-deployment.yaml
          kubectl apply -f infra/k8s/milestoner-deployment.yaml
          kubectl apply -f infra/k8s/ingress.yaml

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/tatvaops-api -n tatvaops
          kubectl rollout status deployment/tatvaops-summarizer -n tatvaops
          kubectl rollout status deployment/tatvaops-milestoner -n tatvaops

      - name: Run smoke tests
        run: |
          kubectl run smoke-test --rm -i --restart=Never --image=curlimages/curl:latest -- \
            curl -f http://tatvaops-api.tatvaops.svc.cluster.local/health || exit 1

